apply plugin: "java"
apply plugin: "idea"

repositories {
	mavenCentral()
}

configurations.all {
	transitive = true
}

dependencies {
	compile "com.google.code.gson:gson:2.3"

	compile "org.apache.httpcomponents:httpcore:4.2.5"
	compile "org.apache.httpcomponents:httpclient:4.2.5"

	compile "commons-logging:commons-logging:1.1"

	testCompile "junit:junit:4.11"
	testCompile "org.hamcrest:hamcrest-core:1.3"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.0'
}

def getMavenSettingsCredentials = {
    String userHome = System.getProperty( "user.home" );
    File mavenSettings = new File(userHome, ".m2/settings.xml")
    def xmlSlurper = new XmlSlurper()
    def output = xmlSlurper.parse(mavenSettings)
    return output."servers"."server"
}

def getCredentials = {
    def entries = getMavenSettingsCredentials()
    for (entry in entries) {
        if ( entry."id".text() == "nexus.releases" ) {
            return [username: entry.username.text(), password: entry.password.text()]
    }
  }
}

uploadArchives {
    def creds = getCredentials()
    repositories {
       mavenDeployer {
             repository(url: "http://nexus.internal.ibboost.com:8081/nexus/content/repositories/releases/") {
             	authentication(userName: creds["username"], password: creds["password"])
			 }
             pom.version = "1.1.0"
             pom.artifactId = "consul-api"
             pom.groupId = "com.ibboost.ecwid.consul"
       }
    }
}