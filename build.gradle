apply plugin: "java"
apply plugin: "idea"
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
	mavenCentral()
}

dependencies {
	compile "com.google.code.gson:gson:2.3"

	compile "org.apache.httpcomponents:httpcore:4.2.5"
	compile "org.apache.httpcomponents:httpclient:4.2.5"

	testCompile "junit:junit:4.11"
}

// --------------------------------------------------------------
// Tasks for publishing into Maven Central

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

artifacts {
	archives jar
	archives sourcesJar
	archives javadocJar
}

def getMavenSettingsCredentials = {
    File mavenSettings = new File("/var/lib/jenkins/settings.xml")
    if(mavenSettings.exists()) {
    	def xmlSlurper = new XmlSlurper()
    	def output = xmlSlurper.parse(mavenSettings)
    	return output."servers"."server"
    } else {
    	return null
    }
}

def getCredentials = {
    def entries = getMavenSettingsCredentials()
    if(entries) {
	    for (entry in entries) {
	        if ( entry."id".text() == "nexus.releases" )
	            return [username: entry.username.text(), password: entry.password.text()]
	    }
	} else {
	    return ["username":"","password":""]
 	}
}

uploadArchives {
    def creds = getCredentials()
    repositories {
       mavenDeployer {
             repository(url: "http://nexus.internal.ibboost.com/content/repositories/releases/") {
             	authentication(userName: creds["username"], password: creds["password"])
			 }
             pom.version = "1.1.11.1"
             pom.artifactId = "consul-api"
             pom.groupId = "com.ibboost.ecwid.consul"
       }
    }
}

// --------------------------------------------------------------
// Wrapper

task wrapper(type: Wrapper) {
	gradleVersion = '2.11'
}